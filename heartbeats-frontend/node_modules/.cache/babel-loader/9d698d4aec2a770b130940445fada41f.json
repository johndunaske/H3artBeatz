{"ast":null,"code":"import _classCallCheck from\"/Users/johnduna/Documents/GitHub/H3artBeatz/heartbeats-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/johnduna/Documents/GitHub/H3artBeatz/heartbeats-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/johnduna/Documents/GitHub/H3artBeatz/heartbeats-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/johnduna/Documents/GitHub/H3artBeatz/heartbeats-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from\"react\";import{Line}from\"react-chartjs-2\";import{jsx as _jsx}from\"react/jsx-runtime\";var GraphComponent=/*#__PURE__*/function(_React$Component){_inherits(GraphComponent,_React$Component);var _super=_createSuper(GraphComponent);function GraphComponent(props){var _this;_classCallCheck(this,GraphComponent);_this=_super.call(this,props);_this.addItem=function(){var lastVal=0;var lastX=0;var newY=0;var newX=0;if(_this.state.hrReadings.length>=_this.state.maxReadings){lastVal=_this.state.hrReadings[9];lastX=_this.state.xAxis[9];newY=_this.state.hrReadings.slice(1).concat(lastVal+20);newX=_this.state.xAxis.slice(1).concat(lastX+0.5);}else{lastVal=_this.state.hrReadings[_this.state.hrReadings.length-1];lastX=_this.state.xAxis[_this.state.xAxis.length-1];newY=_this.state.hrReadings.concat(lastVal+20);newX=_this.state.xAxis.concat(lastX+0.5);}_this.setState({xAxis:newX,hrReadings:newY});};_this.state={hrReadings:[90,90,90,130,130,130],// 90,90,90,130,130,130 List containing the heart rate readings to display in the graph (y axis)\nxAxis:[0,0.5,1,1.5,2,2.5],//0, 0.5, 1, 1.5, 2, 2.5\nmaxReadings:10,// Maximum # of readings stored in the hrReadings (simulate motion of the graph)\noptions:{elements:{point:{radius:0}},plugins:{legend:{display:false}},scales:{x:{display:false},y:{display:false,suggestedMin:40,suggestedMax:200}}}};return _this;}_createClass(GraphComponent,[{key:\"render\",value:function render(){var data={labels:this.state.xAxis,datasets:[{data:this.state.hrReadings,fill:false,backgroundColor:\"rgb(255, 99, 132)\",borderColor:\"rgba(255, 99, 132, 0.7)\",borderWidth:5,tension:0.2}]};//<button className=\"addButton\" onClick={this.addItem}>Add Point</button>\nreturn/*#__PURE__*/_jsx(\"div\",{className:\"graphContainer\",children:/*#__PURE__*/_jsx(Line,{className:\"lineGraph\",options:this.state.options,data:data})});}}]);return GraphComponent;}(React.Component);export{GraphComponent as default};","map":{"version":3,"sources":["/Users/johnduna/Documents/GitHub/H3artBeatz/heartbeats-frontend/src/Components/GraphComponent.jsx"],"names":["React","Line","GraphComponent","props","addItem","lastVal","lastX","newY","newX","state","hrReadings","length","maxReadings","xAxis","slice","concat","setState","options","elements","point","radius","plugins","legend","display","scales","x","y","suggestedMin","suggestedMax","data","labels","datasets","fill","backgroundColor","borderColor","borderWidth","tension","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Line } from \"react-chartjs-2\";\n\nexport default class GraphComponent extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      hrReadings: [90,90,90,130,130,130], // 90,90,90,130,130,130 List containing the heart rate readings to display in the graph (y axis)\n      xAxis: [0, 0.5, 1, 1.5, 2, 2.5], //0, 0.5, 1, 1.5, 2, 2.5\n      maxReadings: 10, // Maximum # of readings stored in the hrReadings (simulate motion of the graph)\n      options: {\n        elements: {\n          point: {\n            radius: 0,\n          },\n        },\n        plugins: {\n          legend: {\n            display: false,\n          },\n        },\n        scales: {\n          x: {\n            display: false,\n          },\n          y: {\n            display: false,\n            suggestedMin: 40,\n            suggestedMax: 200,\n          },\n        },\n      },\n    };\n  }\n\n  addItem = () => {\n    var lastVal = 0;\n    var lastX = 0;\n    var newY = 0;\n    var newX = 0;\n\n    if (this.state.hrReadings.length >= this.state.maxReadings) {\n      lastVal = this.state.hrReadings[9];\n      lastX = this.state.xAxis[9];\n      newY = this.state.hrReadings.slice(1).concat(lastVal + 20);\n      newX = this.state.xAxis.slice(1).concat(lastX + 0.5);\n    } else {\n      lastVal = this.state.hrReadings[this.state.hrReadings.length - 1];\n      lastX = this.state.xAxis[this.state.xAxis.length - 1];\n      newY = this.state.hrReadings.concat(lastVal + 20);\n      newX = this.state.xAxis.concat(lastX + 0.5);\n    }\n\n    this.setState({ xAxis: newX, hrReadings: newY });\n  };\n\n  render() {\n    const data = {\n      labels: this.state.xAxis,\n      datasets: [\n        {\n          data: this.state.hrReadings,\n          fill: false,\n          backgroundColor: \"rgb(255, 99, 132)\",\n          borderColor: \"rgba(255, 99, 132, 0.7)\",\n          borderWidth: 5,\n          tension: 0.2,\n        },\n      ],\n    };\n    //<button className=\"addButton\" onClick={this.addItem}>Add Point</button>\n    return (\n      <div className=\"graphContainer\">\n        <Line className=\"lineGraph\" options={this.state.options} data={data} />\n        \n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}