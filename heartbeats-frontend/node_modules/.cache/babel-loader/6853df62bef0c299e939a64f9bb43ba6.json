{"ast":null,"code":"var _jsxFileName = \"/Users/johnduna/Documents/GitHub/H3artBeatz/heartbeats-frontend/src/Components/GraphComponent.jsx\";\nimport React from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class GraphComponent extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.addItem = () => {};\n\n    this.state = {\n      hrReadings: [0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2],\n      // List containing the heart rate readings to display in the graph (y axis)\n      xAxis: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10],\n      maxReadings: 10,\n      // Maximum # of readings stored in the hrReadings (simulate motion of the graph)\n      options: {\n        plugins: {\n          legend: {\n            display: false\n          }\n        },\n        scales: {\n          x: {\n            display: false\n          },\n          y: {\n            display: false\n          }\n        }\n      }\n    };\n  }\n\n  render() {\n    const data = {\n      labels: this.state.xAxis,\n      datasets: [{\n        data: this.state.hrReadings,\n        fill: true,\n        backgroundColor: \"rgb(255, 99, 132)\",\n        borderColor: \"rgb(255, 99, 132)\",\n        tension: .15,\n        order: 2\n      }]\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Line, {\n        className: \"lineGraph\",\n        options: this.state.options,\n        data: data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.addItem,\n        children: \"Add Point\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/johnduna/Documents/GitHub/H3artBeatz/heartbeats-frontend/src/Components/GraphComponent.jsx"],"names":["React","Line","GraphComponent","Component","constructor","props","addItem","state","hrReadings","xAxis","maxReadings","options","plugins","legend","display","scales","x","y","render","data","labels","datasets","fill","backgroundColor","borderColor","tension","order"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,iBAArB;;AAEA,eAAe,MAAMC,cAAN,SAA6BF,KAAK,CAACG,SAAnC,CAA6C;AAC1DC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAyBnBC,OAzBmB,GAyBT,MAAM,CAAE,CAzBC;;AAGjB,SAAKC,KAAL,GAAa;AACXC,MAAAA,UAAU,EAAE,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,EAAS,CAAT,EAAW,CAAX,EAAa,CAAb,EAAe,CAAf,EAAiB,CAAjB,EAAmB,CAAnB,EAAqB,CAArB,CADD;AAC0B;AACrCC,MAAAA,KAAK,EAAE,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,EAAS,CAAT,EAAW,CAAX,EAAa,CAAb,EAAe,CAAf,EAAiB,CAAjB,EAAmB,EAAnB,CAFI;AAGXC,MAAAA,WAAW,EAAE,EAHF;AAGM;AACjBC,MAAAA,OAAO,EAAE;AACPC,QAAAA,OAAO,EAAE;AACLC,UAAAA,MAAM,EAAE;AACJC,YAAAA,OAAO,EAAC;AADJ;AADH,SADF;AAMPC,QAAAA,MAAM,EAAE;AACNC,UAAAA,CAAC,EAAE;AACCF,YAAAA,OAAO,EAAC;AADT,WADG;AAING,UAAAA,CAAC,EAAE;AACCH,YAAAA,OAAO,EAAE;AADV;AAJG;AAND;AAJE,KAAb;AAoBD;;AAIDI,EAAAA,MAAM,GAAG;AACP,UAAMC,IAAI,GAAG;AACXC,MAAAA,MAAM,EAAE,KAAKb,KAAL,CAAWE,KADR;AAEXY,MAAAA,QAAQ,EAAE,CACR;AACEF,QAAAA,IAAI,EAAE,KAAKZ,KAAL,CAAWC,UADnB;AAEEc,QAAAA,IAAI,EAAE,IAFR;AAGEC,QAAAA,eAAe,EAAE,mBAHnB;AAIEC,QAAAA,WAAW,EAAE,mBAJf;AAKEC,QAAAA,OAAO,EAAE,GALX;AAMEC,QAAAA,KAAK,EAAC;AANR,OADQ;AAFC,KAAb;AAcA,wBACE;AAAA,8BACE,QAAC,IAAD;AAAM,QAAA,SAAS,EAAC,WAAhB;AAA4B,QAAA,OAAO,EAAE,KAAKnB,KAAL,CAAWI,OAAhD;AAAyD,QAAA,IAAI,EAAEQ;AAA/D;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,QAAA,OAAO,EAAE,KAAKb,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAMD;;AAjDyD","sourcesContent":["import React from \"react\";\nimport { Line } from \"react-chartjs-2\";\n\nexport default class GraphComponent extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      hrReadings: [0,1,1,1,1,1,2,2,2,2,2], // List containing the heart rate readings to display in the graph (y axis)\n      xAxis: [1,2,3,4,5,6,7,8,9,10],\n      maxReadings: 10, // Maximum # of readings stored in the hrReadings (simulate motion of the graph)\n      options: {\n        plugins: {\n            legend: {\n                display:false\n            }\n        },\n        scales: {\n          x: {\n              display:false,\n          },\n          y: {\n              display: false,\n          }\n        },\n      },\n    };\n  }\n\n  addItem = () => {};\n\n  render() {\n    const data = {\n      labels: this.state.xAxis,\n      datasets: [\n        {\n          data: this.state.hrReadings,\n          fill: true,\n          backgroundColor: \"rgb(255, 99, 132)\",\n          borderColor: \"rgb(255, 99, 132)\",\n          tension: .15,\n          order:2,\n        },\n      ],\n    };\n\n    return (\n      <div>\n        <Line className=\"lineGraph\" options={this.state.options} data={data} />\n        <button onClick={this.addItem}>Add Point</button>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}