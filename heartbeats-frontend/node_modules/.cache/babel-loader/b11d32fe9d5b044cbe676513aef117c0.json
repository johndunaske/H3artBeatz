{"ast":null,"code":"var _jsxFileName = \"/Users/johnduna/Documents/GitHub/H3artBeatz/heartbeats-frontend/src/Components/GraphComponent.jsx\";\nimport React from \"react\";\nimport CanvasJSReact from \"../assets/canvasjs.react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar CanvasJS = CanvasJSReact.CanvasJS;\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart;\nexport default class GraphComponent extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.addItem = () => {\n      if (this.state.hrReadings.length > 0) {\n        var lastItem = this.state.hrReadings[this.state.hrReadings.length - 1];\n        var newList = this.state.hrReadings.concat({\n          x: lastItem.x + 1,\n          y: lastItem.y + 1\n        });\n        this.setState({\n          hrReadings: newList\n        });\n      } else {\n        this.setState({\n          hrReadings: {\n            x: 1,\n            y: 1\n          }\n        });\n      }\n    };\n\n    this.state = {\n      hrReadings: [],\n      // List containing the heart rate readings to display in the graph\n      maxReadings: 10 // Maximum # of readings stored in the hrReadings (simulate motion of the graph)\n\n    };\n  }\n\n  render() {\n    const options = {\n      title: {\n        text: \"Basic Column Chart in React\"\n      },\n      data: [{\n        type: \"line\",\n        dataPoints: this.state.hrReadings\n      }]\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(CanvasJSChart, {\n        options: options\n        /* onRef = {ref => this.chart = ref} */\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.addItem,\n        children: \"Add Point\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/johnduna/Documents/GitHub/H3artBeatz/heartbeats-frontend/src/Components/GraphComponent.jsx"],"names":["React","CanvasJSReact","CanvasJS","CanvasJSChart","GraphComponent","Component","constructor","props","addItem","state","hrReadings","length","lastItem","newList","concat","x","y","setState","maxReadings","render","options","title","text","data","type","dataPoints"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,0BAA1B;;AAEA,IAAIC,QAAQ,GAAGD,aAAa,CAACC,QAA7B;AACA,IAAIC,aAAa,GAAGF,aAAa,CAACE,aAAlC;AAEA,eAAe,MAAMC,cAAN,SAA6BJ,KAAK,CAACK,SAAnC,CAA6C;AAC1DC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SASnBC,OATmB,GAST,MAAM;AACd,UAAI,KAAKC,KAAL,CAAWC,UAAX,CAAsBC,MAAtB,GAA+B,CAAnC,EAAsC;AACpC,YAAIC,QAAQ,GAAG,KAAKH,KAAL,CAAWC,UAAX,CAAsB,KAAKD,KAAL,CAAWC,UAAX,CAAsBC,MAAtB,GAA6B,CAAnD,CAAf;AACA,YAAIE,OAAO,GAAG,KAAKJ,KAAL,CAAWC,UAAX,CAAsBI,MAAtB,CAA6B;AACzCC,UAAAA,CAAC,EAAEH,QAAQ,CAACG,CAAT,GAAa,CADyB;AAEzCC,UAAAA,CAAC,EAAEJ,QAAQ,CAACI,CAAT,GAAa;AAFyB,SAA7B,CAAd;AAIA,aAAKC,QAAL,CAAc;AAAEP,UAAAA,UAAU,EAAEG;AAAd,SAAd;AACD,OAPD,MAOO;AACL,aAAKI,QAAL,CAAc;AAAEP,UAAAA,UAAU,EAAE;AAAEK,YAAAA,CAAC,EAAE,CAAL;AAAQC,YAAAA,CAAC,EAAE;AAAX;AAAd,SAAd;AACD;AACF,KApBkB;;AAGjB,SAAKP,KAAL,GAAa;AACXC,MAAAA,UAAU,EAAE,EADD;AACK;AAChBQ,MAAAA,WAAW,EAAE,EAFF,CAEM;;AAFN,KAAb;AAID;;AAeDC,EAAAA,MAAM,GAAG;AACP,UAAMC,OAAO,GAAG;AACdC,MAAAA,KAAK,EAAE;AACLC,QAAAA,IAAI,EAAE;AADD,OADO;AAIdC,MAAAA,IAAI,EAAE,CACJ;AACEC,QAAAA,IAAI,EAAE,MADR;AAEEC,QAAAA,UAAU,EAAE,KAAKhB,KAAL,CAAWC;AAFzB,OADI;AAJQ,KAAhB;AAYA,wBACE;AAAA,8BACE,QAAC,aAAD;AACE,QAAA,OAAO,EAAEU;AACT;;AAFF;AAAA;AAAA;AAAA;AAAA,cADF,eAKE;AAAQ,QAAA,OAAO,EAAE,KAAKZ,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AASD;;AA7CyD","sourcesContent":["import React from \"react\";\nimport CanvasJSReact from \"../assets/canvasjs.react\";\n\nvar CanvasJS = CanvasJSReact.CanvasJS;\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart;\n\nexport default class GraphComponent extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      hrReadings: [], // List containing the heart rate readings to display in the graph\n      maxReadings: 10, // Maximum # of readings stored in the hrReadings (simulate motion of the graph)\n    };\n  }\n\n  addItem = () => {\n    if (this.state.hrReadings.length > 0) {\n      var lastItem = this.state.hrReadings[this.state.hrReadings.length-1];\n      var newList = this.state.hrReadings.concat({\n        x: lastItem.x + 1,\n        y: lastItem.y + 1,\n      });\n      this.setState({ hrReadings: newList });\n    } else {\n      this.setState({ hrReadings: { x: 1, y: 1 } });\n    }\n  };\n\n  render() {\n    const options = {\n      title: {\n        text: \"Basic Column Chart in React\",\n      },\n      data: [\n        {\n          type: \"line\",\n          dataPoints: this.state.hrReadings,\n        },\n      ],\n    };\n\n    return (\n      <div>\n        <CanvasJSChart\n          options={options}\n          /* onRef = {ref => this.chart = ref} */\n        />\n        <button onClick={this.addItem}>Add Point</button>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}