{"ast":null,"code":"var _jsxFileName = \"/Users/johnduna/Documents/GitHub/H3artBeatz/heartbeats-frontend/src/Components/HomePage.jsx\";\nimport React from \"react\";\nimport GraphComponent from \"./GraphComponent\";\nimport defaultImage from \"../Assets/testImage.jpg\";\nimport TopBar from \"./TopBar\";\nimport SpotifyPlayer from \"react-spotify-web-playback\"; // props:\n// signout: function to remove spotify auth token cookie\n// token: spotify token\n// fPlaylist: favorite playlist\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class HomePage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => {\n      if (this.state.favoritePlaylistId == null || this.state.favoritePlaylistLink == null) {\n        return;\n      } else {\n        this.getAllTracks();\n        this.getAllBPMS();\n      }\n    };\n\n    this.getAllTracks = () => {\n      var url = 'https://api.spotify.com/v1/playlists/' + this.state.favoritePlaylistId + '/tracks';\n      fetch(url, {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          'Authorization': 'Bearer ' + this.props.token\n        }\n      }).then(response => response.json()).then(data => {\n        this.setState({\n          tracks: data.items\n        });\n      });\n    };\n\n    this.getAllBPMS = () => {\n      var idList = [];\n      this.state.tracks.forEach(track => {\n        idList.push(track.id);\n      });\n      var url = \"https://api.spotify.com/v1/audio-features?ids=\" + idList.join(\",\");\n      console.log(url);\n      fetch(url, {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          'Authorization': 'Bearer ' + this.props.token\n        }\n      }).then(response => response.json()).then(data => {\n        console.log(data);\n      });\n    };\n\n    this.displayAlbum = state => {\n      if (state && state.track && state.track.image) {\n        this.setState({\n          albumCover: state.track.image\n        });\n      }\n    };\n\n    this.state = {\n      favoritePlaylistLink: this.props.fPlaylist != null ? this.props.fPlaylist.uri : \"spotify:artist:6HQYnRM4OzToCYPpVBInuU\",\n      favoritePlaylistId: this.props.fPlaylist != null ? this.props.fPlaylist.id : null,\n      albumCover: defaultImage,\n      tracks: []\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mainContent\",\n      children: [/*#__PURE__*/_jsxDEV(TopBar, {\n        logout: this.props.signout\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"currentSong\",\n        children: this.state.currentSong\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"albumContainer\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"albumCover\",\n          src: this.state.albumCover,\n          alt: defaultImage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(GraphComponent, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SpotifyPlayer, {\n        token: this.props.token,\n        callback: this.displayAlbum,\n        uris: [this.state.favoritePlaylistLink],\n        styles: {\n          bgColor: \"#000\",\n          sliderColor: \"#ff6384\",\n          trackArtistColor: \"#fff\",\n          trackNameColor: \"#fff\",\n          color: \"#fff\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/johnduna/Documents/GitHub/H3artBeatz/heartbeats-frontend/src/Components/HomePage.jsx"],"names":["React","GraphComponent","defaultImage","TopBar","SpotifyPlayer","HomePage","Component","constructor","props","componentDidMount","state","favoritePlaylistId","favoritePlaylistLink","getAllTracks","getAllBPMS","url","fetch","method","headers","token","then","response","json","data","setState","tracks","items","idList","forEach","track","push","id","join","console","log","displayAlbum","image","albumCover","fPlaylist","uri","render","signout","currentSong","bgColor","sliderColor","trackArtistColor","trackNameColor","color"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport GraphComponent from \"./GraphComponent\";\nimport defaultImage from \"../Assets/testImage.jpg\";\nimport TopBar from \"./TopBar\";\nimport SpotifyPlayer from \"react-spotify-web-playback\";\n\n// props:\n// signout: function to remove spotify auth token cookie\n// token: spotify token\n// fPlaylist: favorite playlist\nexport default class HomePage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      favoritePlaylistLink:this.props.fPlaylist != null ? this.props.fPlaylist.uri : \"spotify:artist:6HQYnRM4OzToCYPpVBInuU\",\n      favoritePlaylistId: this.props.fPlaylist != null ? this.props.fPlaylist.id : null,\n      albumCover: defaultImage,\n      tracks:[],\n    };\n  }\n\n  componentDidMount = () => {\n    if (this.state.favoritePlaylistId == null || this.state.favoritePlaylistLink == null) {\n      return\n    } else {\n      this.getAllTracks()\n      this.getAllBPMS()\n    }\n  }\n\n  getAllTracks = () => {\n    var url = 'https://api.spotify.com/v1/playlists/'+ this.state.favoritePlaylistId +'/tracks'\n    fetch(url, {\n      method: \"GET\",\n      headers:{\n        \"Content-Type\": \"application/json\",\n        'Authorization': 'Bearer ' + this.props.token,\n    }}).then((response) => response.json())\n    .then((data) => {\n      this.setState({tracks:data.items});\n    })\n  }\n\n  getAllBPMS = () => {\n    var idList = [];\n    this.state.tracks.forEach((track) => {\n      idList.push(track.id);\n    });\n    var url = \"https://api.spotify.com/v1/audio-features?ids=\" + idList.join(\",\")\n    console.log(url);\n    fetch(url, {\n      method:\"GET\",\n      headers:{\n        \"Content-Type\": \"application/json\",\n        'Authorization': 'Bearer ' + this.props.token,\n    }}).then((response) => response.json())\n    .then((data) => {\n      console.log(data);\n    })\n  }\n  \n  displayAlbum = (state) => {\n    if (\n      state &&\n      state.track &&\n      state.track.image\n    ) {\n      this.setState({ albumCover: state.track.image});\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"mainContent\">\n        <TopBar logout={this.props.signout}/>\n        <div className=\"currentSong\">{this.state.currentSong}</div>\n        <div className=\"albumContainer\">\n          <img\n            className=\"albumCover\"\n            src={this.state.albumCover}\n            alt={defaultImage}\n          ></img>\n        </div>\n        <GraphComponent />\n        <SpotifyPlayer\n          token={this.props.token}\n          callback={this.displayAlbum}\n          uris={[this.state.favoritePlaylistLink]}\n          styles={{\n            bgColor: \"#000\",\n            sliderColor: \"#ff6384\",\n            trackArtistColor: \"#fff\",\n            trackNameColor: \"#fff\",\n            color: \"#fff\",\n          }}\n        />\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}