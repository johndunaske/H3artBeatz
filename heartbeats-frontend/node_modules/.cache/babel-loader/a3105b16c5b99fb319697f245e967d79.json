{"ast":null,"code":"var _jsxFileName = \"/Users/johnduna/Documents/GitHub/H3artBeatz/heartbeats-frontend/src/App.jsx\";\nimport \"./App.css\";\nimport React from \"react\";\nimport HomeComponent from \"./Components/HomePage\";\nimport LoginPage from \"./Components/LoginPage\";\nimport Cookies from \"universal-cookie\";\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\nimport PlaylistPage from \"./Components/PlaylistPage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cookies = new Cookies();\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getPlaylists = () => {\n      fetch(\"https://api.spotify.com/v1/me/playlists\", {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          'Authorization': 'Bearer ' + this.state.token\n        }\n      }).then(response => response.json()).then(data => {\n        this.setState({\n          playlists: data.items\n        });\n      });\n    };\n\n    this.setFavoritePlaylist = playlistURL => {\n      this.setState({\n        favoritePlaylist: playlistURL\n      });\n    };\n\n    this.setToken = token => {\n      cookies.set('spotifyToken', token, {\n        path: '/'\n      });\n      this.setState({\n        token: token\n      });\n    };\n\n    this.removeToken = () => {\n      cookies.remove('spotifyToken');\n      this.setState({\n        'token': null\n      });\n    };\n\n    this.state = {\n      token: cookies.get('spotifyToken'),\n      playlists: [],\n      favoritePlaylist: null\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(Router, {\n        children: /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/playlist\",\n            element: /*#__PURE__*/_jsxDEV(PlaylistPage, {\n              playlistMethod: this.getPlaylists,\n              playlists: this.state.playlists,\n              favoritePlaylist: this.setFavoritePlaylist\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 44\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 11\n          }, this), this.state.token != null ? /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            element: /*#__PURE__*/_jsxDEV(HomeComponent, {\n              signout: this.removeToken,\n              token: this.state.token,\n              fPlaylist: this.state.favoritePlaylist\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 36\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 11\n          }, this) : /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            element: /*#__PURE__*/_jsxDEV(LoginPage, {\n              updateToken: this.setToken\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 36\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 12\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/johnduna/Documents/GitHub/H3artBeatz/heartbeats-frontend/src/App.jsx"],"names":["React","HomeComponent","LoginPage","Cookies","BrowserRouter","Router","Route","Routes","PlaylistPage","cookies","App","Component","constructor","props","getPlaylists","fetch","method","headers","state","token","then","response","json","data","setState","playlists","items","setFavoritePlaylist","playlistURL","favoritePlaylist","setToken","set","path","removeToken","remove","get","render"],"mappings":"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","sourcesContent":["import \"./App.css\";\nimport React from \"react\";\nimport HomeComponent from \"./Components/HomePage\";\nimport LoginPage from \"./Components/LoginPage\";\nimport Cookies from \"universal-cookie\";\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\nimport PlaylistPage from \"./Components/PlaylistPage\";\n\nconst cookies = new Cookies()\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      token: cookies.get('spotifyToken'),\n      playlists: [],\n      favoritePlaylist:null\n    }\n  }\n\n  getPlaylists = () => {\n    fetch(\"https://api.spotify.com/v1/me/playlists\", {\n      method:\"GET\",\n      headers:{\n        \"Content-Type\": \"application/json\",\n        'Authorization': 'Bearer ' + this.state.token,\n    }}).then((response) => response.json())\n    .then((data) => {\n      this.setState({playlists: data.items});\n    })\n  }\n\n  setFavoritePlaylist = (playlistURL) => {\n    this.setState({favoritePlaylist : playlistURL});\n  }\n\n  setToken = (token) => {\n    cookies.set('spotifyToken', token, {path:'/'});\n    this.setState({token: token});\n  }\n\n  removeToken = () => {\n    cookies.remove('spotifyToken');\n    this.setState({'token': null});\n  }\n\n  render() {\n    return <div className=\"App\">\n      <Router>\n        <Routes>\n          <Route path=\"/playlist\" element={<PlaylistPage playlistMethod={this.getPlaylists} playlists={this.state.playlists} favoritePlaylist={this.setFavoritePlaylist}/>}/>\n          {this.state.token != null ? \n          <Route path=\"/\" element={<HomeComponent signout={this.removeToken} token={this.state.token} fPlaylist={this.state.favoritePlaylist}/>}/> :\n          <Route path=\"/\" element={<LoginPage updateToken={this.setToken}/>}/>}\n        </Routes>\n      </Router>\n\n    </div>;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}