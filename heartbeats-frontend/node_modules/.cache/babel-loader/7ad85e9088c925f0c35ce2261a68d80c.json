{"ast":null,"code":"var _jsxFileName = \"/Users/johnduna/Documents/GitHub/H3artBeatz/heartbeats-frontend/src/Components/HomePage.jsx\";\nimport React from \"react\";\nimport GraphComponent from \"./GraphComponent\";\nimport defaultImage from \"../Assets/testImage.jpg\";\nimport TopBar from \"./TopBar\";\nimport SpotifyPlayer from \"react-spotify-web-playback\"; // props:\n// signout: function to remove spotify auth token cookie\n// token: spotify token\n// fPlaylist: favorite playlist\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar socket;\nexport default class HomePage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => {\n      socket = new WebSocket(\"ws://https://h3artbeatz.herokuapp.com/websocket\");\n      socket.addEventListener(\"open\", event => {\n        console.log(\"Websocket Connected!\");\n      });\n      socket.addEventListener(\"message\", event => {\n        var data = JSON.parse(event.BPM);\n        this.setState();\n      });\n      socket.addEventListener(\"close\", event => {\n        console.log(\"Websocket Disconnected!\");\n      });\n    };\n\n    this.displayAlbum = state => {\n      if (state && state.track && state.track.image) {\n        this.setState({\n          albumCover: state.track.image\n        });\n      }\n    };\n\n    this.state = {\n      favoritePlaylistLink: this.props.fPlaylist != null ? this.props.fPlaylist.uri : \"spotify:artist:6HQYnRM4OzToCYPpVBInuU\",\n      favoritePlaylistId: this.props.fPlaylist != null ? this.props.fPlaylist.id : null,\n      albumCover: defaultImage\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mainContent\",\n      children: [/*#__PURE__*/_jsxDEV(TopBar, {\n        logout: this.props.signout\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"currentSong\",\n        children: this.state.currentSong\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"albumContainer\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"albumCover\",\n          src: this.state.albumCover,\n          alt: defaultImage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(GraphComponent, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SpotifyPlayer, {\n        token: this.props.token,\n        callback: this.displayAlbum,\n        uris: [this.state.favoritePlaylistLink],\n        styles: {\n          bgColor: \"#000\",\n          sliderColor: \"#ff6384\",\n          trackArtistColor: \"#fff\",\n          trackNameColor: \"#fff\",\n          color: \"#fff\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/johnduna/Documents/GitHub/H3artBeatz/heartbeats-frontend/src/Components/HomePage.jsx"],"names":["React","GraphComponent","defaultImage","TopBar","SpotifyPlayer","socket","HomePage","Component","constructor","props","componentDidMount","WebSocket","addEventListener","event","console","log","data","JSON","parse","BPM","setState","displayAlbum","state","track","image","albumCover","favoritePlaylistLink","fPlaylist","uri","favoritePlaylistId","id","render","signout","currentSong","token","bgColor","sliderColor","trackArtistColor","trackNameColor","color"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport GraphComponent from \"./GraphComponent\";\nimport defaultImage from \"../Assets/testImage.jpg\";\nimport TopBar from \"./TopBar\";\nimport SpotifyPlayer from \"react-spotify-web-playback\";\n\n// props:\n// signout: function to remove spotify auth token cookie\n// token: spotify token\n// fPlaylist: favorite playlist\n\nvar socket;\nexport default class HomePage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      favoritePlaylistLink:\n        this.props.fPlaylist != null\n          ? this.props.fPlaylist.uri\n          : \"spotify:artist:6HQYnRM4OzToCYPpVBInuU\",\n      favoritePlaylistId:\n        this.props.fPlaylist != null ? this.props.fPlaylist.id : null,\n      albumCover: defaultImage,\n    };\n  }\n\n  componentDidMount = () => {\n    socket = new WebSocket(\"ws://https://h3artbeatz.herokuapp.com/websocket\");\n\n    socket.addEventListener(\"open\", (event) => {\n      console.log(\"Websocket Connected!\");\n    });\n\n    socket.addEventListener(\"message\", (event) => {\n      var data = JSON.parse(event.BPM);\n      this.setState();\n    });\n\n    socket.addEventListener(\"close\", (event) => {\n      console.log(\"Websocket Disconnected!\");\n    });\n  };\n\n  displayAlbum = (state) => {\n    if (state && state.track && state.track.image) {\n      this.setState({ albumCover: state.track.image });\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"mainContent\">\n        <TopBar logout={this.props.signout} />\n        <div className=\"currentSong\">{this.state.currentSong}</div>\n        <div className=\"albumContainer\">\n          <img\n            className=\"albumCover\"\n            src={this.state.albumCover}\n            alt={defaultImage}\n          ></img>\n        </div>\n        <GraphComponent />\n        <SpotifyPlayer\n          token={this.props.token}\n          callback={this.displayAlbum}\n          uris={[this.state.favoritePlaylistLink]}\n          styles={{\n            bgColor: \"#000\",\n            sliderColor: \"#ff6384\",\n            trackArtistColor: \"#fff\",\n            trackNameColor: \"#fff\",\n            color: \"#fff\",\n          }}\n        />\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}