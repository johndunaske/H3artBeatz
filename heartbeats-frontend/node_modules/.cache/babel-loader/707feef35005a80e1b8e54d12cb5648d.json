{"ast":null,"code":"var _jsxFileName = \"/Users/johnduna/Documents/GitHub/H3artBeatz/heartbeats-frontend/src/Components/HomePage.jsx\";\nimport React from \"react\";\nimport GraphComponent from \"./GraphComponent\";\nimport defaultImage from \"../Assets/testImage.jpg\";\nimport TopBar from \"./TopBar\";\nimport SpotifyPlayer from \"react-spotify-web-playback\"; // props:\n// signout: function to remove spotify auth token cookie\n// token: spotify token\n// fPlaylist: favorite playlist\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class HomePage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => {\n      if (this.state.favoritePlaylistId == null || this.state.favoritePlaylistLink == null) {\n        return;\n      } else {\n        var url = \"https://api.spotify.com/v1/playlists/\" + this.state.favoritePlaylistId + \"/tracks\";\n        fetch(url, {\n          method: \"GET\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: \"Bearer \" + this.props.token\n          }\n        }).then(response => response.json()).then(data => {\n          this.setState({\n            tracks: data.items\n          }, () => {\n            var url = \"https://api.spotify.com/v1/audio-features?ids=\" + idList.join();\n            fetch(url, {\n              method: \"GET\",\n              headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: \"Bearer \" + this.props.token\n              }\n            }).then(response => response.json()).then(data => {\n              var createMap = {};\n              data.audio_features.forEach(track => {\n                var tempo = track.tempo;\n                createMap[tempo] = track.uri;\n              });\n              return createMap;\n            }).then(finished => {\n              return finished;\n            });\n          });\n        });\n      }\n    };\n\n    this.displayAlbum = state => {\n      if (state && state.track && state.track.image) {\n        this.setState({\n          albumCover: state.track.image\n        });\n      }\n    };\n\n    this.state = {\n      tracks: \"\",\n      bpmMap: {},\n      favoritePlaylistLink: this.props.fPlaylist != null ? this.props.fPlaylist.uri : \"spotify:artist:6HQYnRM4OzToCYPpVBInuU\",\n      favoritePlaylistId: this.props.fPlaylist != null ? this.props.fPlaylist.id : null,\n      albumCover: defaultImage\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mainContent\",\n      children: [/*#__PURE__*/_jsxDEV(TopBar, {\n        logout: this.props.signout\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"currentSong\",\n        children: this.state.currentSong\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"albumContainer\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"albumCover\",\n          src: this.state.albumCover,\n          alt: defaultImage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(GraphComponent, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SpotifyPlayer, {\n        token: this.props.token,\n        callback: this.displayAlbum,\n        uris: [this.state.favoritePlaylistLink],\n        styles: {\n          bgColor: \"#000\",\n          sliderColor: \"#ff6384\",\n          trackArtistColor: \"#fff\",\n          trackNameColor: \"#fff\",\n          color: \"#fff\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/johnduna/Documents/GitHub/H3artBeatz/heartbeats-frontend/src/Components/HomePage.jsx"],"names":["React","GraphComponent","defaultImage","TopBar","SpotifyPlayer","HomePage","Component","constructor","props","componentDidMount","state","favoritePlaylistId","favoritePlaylistLink","url","fetch","method","headers","Authorization","token","then","response","json","data","setState","tracks","items","idList","join","createMap","audio_features","forEach","track","tempo","uri","finished","displayAlbum","image","albumCover","bpmMap","fPlaylist","id","render","signout","currentSong","bgColor","sliderColor","trackArtistColor","trackNameColor","color"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport GraphComponent from \"./GraphComponent\";\nimport defaultImage from \"../Assets/testImage.jpg\";\nimport TopBar from \"./TopBar\";\nimport SpotifyPlayer from \"react-spotify-web-playback\";\n\n// props:\n// signout: function to remove spotify auth token cookie\n// token: spotify token\n// fPlaylist: favorite playlist\nexport default class HomePage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      tracks: \"\",\n      bpmMap: {},\n      favoritePlaylistLink:\n        this.props.fPlaylist != null\n          ? this.props.fPlaylist.uri\n          : \"spotify:artist:6HQYnRM4OzToCYPpVBInuU\",\n      favoritePlaylistId:\n        this.props.fPlaylist != null ? this.props.fPlaylist.id : null,\n      albumCover: defaultImage,\n    };\n  }\n\n  componentDidMount = () => {\n    if (\n      this.state.favoritePlaylistId == null ||\n      this.state.favoritePlaylistLink == null\n    ) {\n      return;\n    } else {\n      var url =\n        \"https://api.spotify.com/v1/playlists/\" +\n        this.state.favoritePlaylistId +\n        \"/tracks\";\n      fetch(url, {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: \"Bearer \" + this.props.token,\n        },\n      })\n        .then((response) => response.json())\n        .then((data) => {\n          this.setState({ tracks: data.items }, () => {\n            var url =\n              \"https://api.spotify.com/v1/audio-features?ids=\" + idList.join();\n            fetch(url, {\n              method: \"GET\",\n              headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: \"Bearer \" + this.props.token,\n              },\n            })\n              .then((response) => response.json())\n              .then((data) => {\n                var createMap = {};\n                data.audio_features.forEach((track) => {\n                  var tempo = track.tempo;\n                  createMap[tempo] = track.uri;\n                });\n                return createMap;\n              })\n              .then((finished) => {\n                return finished;\n              });\n          });\n        });\n    }\n  };\n\n  displayAlbum = (state) => {\n    if (state && state.track && state.track.image) {\n      this.setState({ albumCover: state.track.image });\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"mainContent\">\n        <TopBar logout={this.props.signout} />\n        <div className=\"currentSong\">{this.state.currentSong}</div>\n        <div className=\"albumContainer\">\n          <img\n            className=\"albumCover\"\n            src={this.state.albumCover}\n            alt={defaultImage}\n          ></img>\n        </div>\n        <GraphComponent />\n        <SpotifyPlayer\n          token={this.props.token}\n          callback={this.displayAlbum}\n          uris={[this.state.favoritePlaylistLink]}\n          styles={{\n            bgColor: \"#000\",\n            sliderColor: \"#ff6384\",\n            trackArtistColor: \"#fff\",\n            trackNameColor: \"#fff\",\n            color: \"#fff\",\n          }}\n        />\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}