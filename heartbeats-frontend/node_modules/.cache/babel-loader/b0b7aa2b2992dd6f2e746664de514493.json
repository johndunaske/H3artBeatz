{"ast":null,"code":"var _jsxFileName = \"/Users/johnduna/Documents/GitHub/H3artBeatz/heartbeats-frontend/src/Components/LoginPage.jsx\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const authEndpoint = 'https://accounts.spotify.com/authorize?'; // Replace with your app's client ID, redirect URI and desired scopes\n\nconst clientId = \"0f76c14b4897491db4970cd235a10161\";\nconst redirectUri = \"http://localhost:3000\"; //const redirectUri = \"https://h3artbeatz.herokuapp.com/\";\n\nconst scopes = [\"user-read-currently-playing\", \"user-read-playback-state\"];\nconst hash = window.location.hash.substring(1).split(\"&\").reduce(function (initial, item) {\n  if (item) {\n    var parts = item.split(\"=\");\n    initial[parts[0]] = decodeURIComponent(parts[1]);\n  }\n\n  return initial;\n}, {});\nwindow.location.hash = \"\"; // props:\n// updateToken: function to update the token in app.jsx\n\nexport default class LoginPage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => {\n      let _token = hash.access_token;\n\n      if (_token) {\n        this.setState({\n          token: _token\n        });\n        this.props.updateToken(_token);\n      }\n    };\n\n    this.state = {\n      token: \"\"\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mainContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pageHeader\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"heart\",\n          children: \"H3art\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 45\n        }, this), \"Beatz\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loginContainer\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loginWindow\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"loginHeader\",\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this), this.state.token === \"\" ? /*#__PURE__*/_jsxDEV(\"a\", {\n            className: \"loginButton\",\n            href: `${authEndpoint}client_id=${clientId}&redirect_uri=${redirectUri}&scope=${scopes.join(\"%20\")}&response_type=token&show_dialog=true`,\n            children: \"Login With Spotify\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 28\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/johnduna/Documents/GitHub/H3artBeatz/heartbeats-frontend/src/Components/LoginPage.jsx"],"names":["React","authEndpoint","clientId","redirectUri","scopes","hash","window","location","substring","split","reduce","initial","item","parts","decodeURIComponent","LoginPage","Component","constructor","props","componentDidMount","_token","access_token","setState","token","updateToken","state","render","join"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAGA,OAAO,MAAMC,YAAY,GAAG,yCAArB,C,CACP;;AACA,MAAMC,QAAQ,GAAG,kCAAjB;AACA,MAAMC,WAAW,GAAG,uBAApB,C,CACA;;AACA,MAAMC,MAAM,GAAG,CACb,6BADa,EAEb,0BAFa,CAAf;AAKA,MAAMC,IAAI,GAAGC,MAAM,CAACC,QAAP,CAAgBF,IAAhB,CACVG,SADU,CACA,CADA,EAEVC,KAFU,CAEJ,GAFI,EAGVC,MAHU,CAGH,UAASC,OAAT,EAAkBC,IAAlB,EAAwB;AAC9B,MAAIA,IAAJ,EAAU;AACR,QAAIC,KAAK,GAAGD,IAAI,CAACH,KAAL,CAAW,GAAX,CAAZ;AACAE,IAAAA,OAAO,CAACE,KAAK,CAAC,CAAD,CAAN,CAAP,GAAoBC,kBAAkB,CAACD,KAAK,CAAC,CAAD,CAAN,CAAtC;AACD;;AACD,SAAOF,OAAP;AACD,CATU,EASR,EATQ,CAAb;AAUAL,MAAM,CAACC,QAAP,CAAgBF,IAAhB,GAAuB,EAAvB,C,CAGA;AACA;;AACA,eAAe,MAAMU,SAAN,SAAwBf,KAAK,CAACgB,SAA9B,CAAwC;AACnDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAOnBC,iBAPmB,GAOC,MAAM;AACtB,UAAIC,MAAM,GAAGf,IAAI,CAACgB,YAAlB;;AACA,UAAID,MAAJ,EAAY;AACR,aAAKE,QAAL,CAAc;AAACC,UAAAA,KAAK,EAACH;AAAP,SAAd;AACA,aAAKF,KAAL,CAAWM,WAAX,CAAuBJ,MAAvB;AACH;AACJ,KAbkB;;AAEf,SAAKK,KAAL,GAAa;AACTF,MAAAA,KAAK,EAAE;AADE,KAAb;AAGH;;AAUDG,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,gCAA4B;AAAM,UAAA,SAAS,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAA5B;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA,+BACI;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA,kCACI;AAAK,YAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAEK,KAAKD,KAAL,CAAWF,KAAX,KAAqB,EAArB,gBACG;AAAG,YAAA,SAAS,EAAC,aAAb;AAA2B,YAAA,IAAI,EAAG,GAAEtB,YAAa,aAAYC,QAAS,iBAAgBC,WAAY,UAASC,MAAM,CAACuB,IAAP,CAAY,KAAZ,CAAmB,uCAA9H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADH,gBAEE;AAAA;AAAA;AAAA;AAAA,kBAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAaH;;AA9BkD","sourcesContent":["import React from \"react\";\n\n\nexport const authEndpoint = 'https://accounts.spotify.com/authorize?';\n// Replace with your app's client ID, redirect URI and desired scopes\nconst clientId = \"0f76c14b4897491db4970cd235a10161\";\nconst redirectUri = \"http://localhost:3000\";\n//const redirectUri = \"https://h3artbeatz.herokuapp.com/\";\nconst scopes = [\n  \"user-read-currently-playing\",\n  \"user-read-playback-state\",\n];\n\nconst hash = window.location.hash\n  .substring(1)\n  .split(\"&\")\n  .reduce(function(initial, item) {\n    if (item) {\n      var parts = item.split(\"=\");\n      initial[parts[0]] = decodeURIComponent(parts[1]);\n    }\n    return initial;\n  }, {});\nwindow.location.hash = \"\";\n\n\n// props:\n// updateToken: function to update the token in app.jsx\nexport default class LoginPage extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            token: \"\",\n        }\n    }\n\n    componentDidMount = () => {\n        let _token = hash.access_token;\n        if (_token) {\n            this.setState({token:_token});\n            this.props.updateToken(_token);\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"mainContainer\">\n                <div className=\"pageHeader\"><span className=\"heart\">H3art</span>Beatz</div>\n                <div className=\"loginContainer\">\n                    <div className=\"loginWindow\">\n                        <div className=\"loginHeader\">Login</div>\n                        {this.state.token === \"\" ? (\n                            <a className=\"loginButton\" href={`${authEndpoint}client_id=${clientId}&redirect_uri=${redirectUri}&scope=${scopes.join(\"%20\")}&response_type=token&show_dialog=true`}>Login With Spotify</a>\n                        ):(<div/>)}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}