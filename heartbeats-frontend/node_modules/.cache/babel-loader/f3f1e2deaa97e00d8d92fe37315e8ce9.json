{"ast":null,"code":"var _jsxFileName = \"/Users/johnduna/Documents/GitHub/H3artBeatz/heartbeats-frontend/src/Components/GraphComponent.jsx\";\nimport React from \"react\";\nimport CanvasJSReact from \"../assets/canvasjs.react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar CanvasJS = CanvasJSReact.CanvasJS;\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart;\nexport default class GraphComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hrReadings: [],\n      // List containing the heart rate readings to display in the graph\n      maxReadings: 10 // Maximum # of readings stored in the hrReadings (simulate motion of the graph)\n\n    };\n  }\n\n  render() {\n    const options = {\n      title: {\n        text: \"Basic Column Chart in React\"\n      },\n      data: [{\n        type: \"column\",\n        dataPoints: [{\n          label: \"Apple\",\n          y: 10\n        }, {\n          label: \"Orange\",\n          y: 15\n        }, {\n          label: \"Banana\",\n          y: 25\n        }, {\n          label: \"Mango\",\n          y: 30\n        }, {\n          label: \"Grape\",\n          y: 28\n        }]\n      }]\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(CanvasJSChart, {\n        options: options\n        /* onRef = {ref => this.chart = ref} */\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/johnduna/Documents/GitHub/H3artBeatz/heartbeats-frontend/src/Components/GraphComponent.jsx"],"names":["React","CanvasJSReact","CanvasJS","CanvasJSChart","GraphComponent","Component","constructor","props","state","hrReadings","maxReadings","render","options","title","text","data","type","dataPoints","label","y"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,0BAA1B;;AAEA,IAAIC,QAAQ,GAAGD,aAAa,CAACC,QAA7B;AACA,IAAIC,aAAa,GAAGF,aAAa,CAACE,aAAlC;AAEA,eAAe,MAAMC,cAAN,SAA6BJ,KAAK,CAACK,SAAnC,CAA6C;AAC1DC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,UAAU,EAAE,EADD;AACK;AAChBC,MAAAA,WAAW,EAAE,EAFF,CAEM;;AAFN,KAAb;AAID;;AAEDC,EAAAA,MAAM,GAAG;AACP,UAAMC,OAAO,GAAG;AACdC,MAAAA,KAAK,EAAE;AACLC,QAAAA,IAAI,EAAE;AADD,OADO;AAIdC,MAAAA,IAAI,EAAE,CACJ;AACEC,QAAAA,IAAI,EAAE,QADR;AAEEC,QAAAA,UAAU,EAAE,CACV;AAAEC,UAAAA,KAAK,EAAE,OAAT;AAAkBC,UAAAA,CAAC,EAAE;AAArB,SADU,EAEV;AAAED,UAAAA,KAAK,EAAE,QAAT;AAAmBC,UAAAA,CAAC,EAAE;AAAtB,SAFU,EAGV;AAAED,UAAAA,KAAK,EAAE,QAAT;AAAmBC,UAAAA,CAAC,EAAE;AAAtB,SAHU,EAIV;AAAED,UAAAA,KAAK,EAAE,OAAT;AAAkBC,UAAAA,CAAC,EAAE;AAArB,SAJU,EAKV;AAAED,UAAAA,KAAK,EAAE,OAAT;AAAkBC,UAAAA,CAAC,EAAE;AAArB,SALU;AAFd,OADI;AAJQ,KAAhB;AAkBA,wBACE;AAAA,6BACE,QAAC,aAAD;AACE,QAAA,OAAO,EAAEP;AACT;;AAFF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAQD;;AArCyD","sourcesContent":["import React from \"react\";\nimport CanvasJSReact from \"../assets/canvasjs.react\";\n\nvar CanvasJS = CanvasJSReact.CanvasJS;\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart;\n\nexport default class GraphComponent extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      hrReadings: [], // List containing the heart rate readings to display in the graph\n      maxReadings: 10, // Maximum # of readings stored in the hrReadings (simulate motion of the graph)\n    };\n  }\n\n  render() {\n    const options = {\n      title: {\n        text: \"Basic Column Chart in React\",\n      },\n      data: [\n        {\n          type: \"column\",\n          dataPoints: [\n            { label: \"Apple\", y: 10 },\n            { label: \"Orange\", y: 15 },\n            { label: \"Banana\", y: 25 },\n            { label: \"Mango\", y: 30 },\n            { label: \"Grape\", y: 28 },\n          ],\n        },\n      ],\n    };\n\n    return (\n      <div>\n        <CanvasJSChart\n          options={options}\n          /* onRef = {ref => this.chart = ref} */\n        />\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}