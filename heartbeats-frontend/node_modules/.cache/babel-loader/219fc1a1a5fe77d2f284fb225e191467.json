{"ast":null,"code":"var _jsxFileName = \"/Users/johnduna/Documents/GitHub/H3artBeatz/heartbeats-frontend/src/Components/HomePage.jsx\";\nimport React from \"react\";\nimport GraphComponent from \"./GraphComponent\";\nimport defaultImage from \"../Assets/testImage.jpg\";\nimport TopBar from \"./TopBar\";\nimport SpotifyPlayer from \"react-spotify-web-playback\"; // props:\n// signout: function to remove spotify auth token cookie\n// token: spotify token\n// fPlaylist: favorite playlist\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar socket;\nvar count = 0;\nexport default class HomePage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => {\n      socket = new WebSocket(\"ws://https://h3artbeatz.herokuapp.com/websocket\");\n      socket.addEventListener(\"open\", event => {\n        console.log(\"Websocket Connected!\");\n      });\n      socket.addEventListener(\"message\", event => {\n        var data = JSON.parse(event.BPM);\n        var newList = [];\n\n        if (this.state.avg.length < 15) {\n          newList = this.state.avg.concat([data]);\n          this.setState({\n            avg: newList\n          });\n        }\n\n        if (this.state.avg.length >= 15) {\n          var sum = 0;\n\n          for (var i = 0; i < 15; i++) {\n            sum += this.state.avg[i];\n          }\n\n          var avgVal = sum / 15;\n          this.setState({\n            avgCalc: avgVal\n          });\n        }\n\n        if (count > 20) {\n          var newList = this.state.hrReadings.concat([data]);\n          var lastX = this.state.xAxis[this.state.xAxis.length - 1];\n          var newX = this.state.xAxis.concat(this.state.xAxis[lastX]);\n          this.setState({\n            hrReadings: newList\n          });\n          this.setState({\n            xAxis: lastX\n          });\n          count = 0;\n        }\n\n        count++;\n      });\n      socket.addEventListener(\"close\", event => {\n        console.log(\"Websocket Disconnected!\");\n      });\n    };\n\n    this.displayAlbum = state => {\n      if (state && state.track && state.track.image) {\n        this.setState({\n          albumCover: state.track.image\n        });\n      }\n    };\n\n    this.state = {\n      favoritePlaylistLink: this.props.fPlaylist != null ? this.props.fPlaylist.uri : \"spotify:artist:6HQYnRM4OzToCYPpVBInuU\",\n      favoritePlaylistId: this.props.fPlaylist != null ? this.props.fPlaylist.id : null,\n      albumCover: defaultImage,\n      avg: [],\n      avgCalc: 0,\n      hrReadings: [100],\n      xAxis: [0]\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mainContent\",\n      children: [/*#__PURE__*/_jsxDEV(TopBar, {\n        logout: this.props.signout\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"currentSong\",\n        children: this.state.currentSong\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"albumContainer\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"albumCover\",\n          src: this.state.albumCover,\n          alt: defaultImage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(GraphComponent, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SpotifyPlayer, {\n        token: this.props.token,\n        callback: this.displayAlbum,\n        uris: [this.state.favoritePlaylistLink],\n        styles: {\n          bgColor: \"#000\",\n          sliderColor: \"#ff6384\",\n          trackArtistColor: \"#fff\",\n          trackNameColor: \"#fff\",\n          color: \"#fff\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/johnduna/Documents/GitHub/H3artBeatz/heartbeats-frontend/src/Components/HomePage.jsx"],"names":["React","GraphComponent","defaultImage","TopBar","SpotifyPlayer","socket","count","HomePage","Component","constructor","props","componentDidMount","WebSocket","addEventListener","event","console","log","data","JSON","parse","BPM","newList","state","avg","length","concat","setState","sum","i","avgVal","avgCalc","hrReadings","lastX","xAxis","newX","displayAlbum","track","image","albumCover","favoritePlaylistLink","fPlaylist","uri","favoritePlaylistId","id","render","signout","currentSong","token","bgColor","sliderColor","trackArtistColor","trackNameColor","color"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport GraphComponent from \"./GraphComponent\";\nimport defaultImage from \"../Assets/testImage.jpg\";\nimport TopBar from \"./TopBar\";\nimport SpotifyPlayer from \"react-spotify-web-playback\";\n\n// props:\n// signout: function to remove spotify auth token cookie\n// token: spotify token\n// fPlaylist: favorite playlist\n\nvar socket;\nvar count = 0;\nexport default class HomePage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      favoritePlaylistLink:\n        this.props.fPlaylist != null\n          ? this.props.fPlaylist.uri\n          : \"spotify:artist:6HQYnRM4OzToCYPpVBInuU\",\n      favoritePlaylistId:\n        this.props.fPlaylist != null ? this.props.fPlaylist.id : null,\n      albumCover: defaultImage,\n      avg: [],\n      avgCalc: 0,\n      hrReadings: [100],\n      xAxis: [0],\n    };\n  }\n\n  componentDidMount = () => {\n    socket = new WebSocket(\"ws://https://h3artbeatz.herokuapp.com/websocket\");\n\n    socket.addEventListener(\"open\", (event) => {\n      console.log(\"Websocket Connected!\");\n    });\n\n    socket.addEventListener(\"message\", (event) => {\n      var data = JSON.parse(event.BPM);\n      var newList =[];\n      if (this.state.avg.length < 15) {\n        newList = this.state.avg.concat([data]);\n        this.setState({avg:newList});\n      }\n      if (this.state.avg.length >= 15) {\n        var sum = 0;\n        for (var i = 0; i < 15; i++) {\n          sum += this.state.avg[i]\n        }\n        var avgVal = sum / 15\n        this.setState({avgCalc: avgVal});\n      }\n      if (count > 20) {\n        var newList = this.state.hrReadings.concat([data]);\n        var lastX = this.state.xAxis[this.state.xAxis.length - 1]\n        var newX = this.state.xAxis.concat(this.state.xAxis[lastX])\n        this.setState({hrReadings:newList});\n        this.setState({xAxis:lastX});\n        count = 0;\n      }\n\n      count++;\n    });\n\n    socket.addEventListener(\"close\", (event) => {\n      console.log(\"Websocket Disconnected!\");\n    });\n  };\n\n  displayAlbum = (state) => {\n    if (state && state.track && state.track.image) {\n      this.setState({ albumCover: state.track.image });\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"mainContent\">\n        <TopBar logout={this.props.signout} />\n        <div className=\"currentSong\">{this.state.currentSong}</div>\n        <div className=\"albumContainer\">\n          <img\n            className=\"albumCover\"\n            src={this.state.albumCover}\n            alt={defaultImage}\n          ></img>\n        </div>\n        <GraphComponent />\n        <SpotifyPlayer\n          token={this.props.token}\n          callback={this.displayAlbum}\n          uris={[this.state.favoritePlaylistLink]}\n          styles={{\n            bgColor: \"#000\",\n            sliderColor: \"#ff6384\",\n            trackArtistColor: \"#fff\",\n            trackNameColor: \"#fff\",\n            color: \"#fff\",\n          }}\n        />\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}