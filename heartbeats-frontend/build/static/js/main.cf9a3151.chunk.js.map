{"version":3,"sources":["Components/GraphComponent.jsx","Assets/testImage.jpg","Components/TopBar.jsx","Components/HomePage.jsx","Components/LoginPage.jsx","Components/PlaylistPage.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["GraphComponent","props","addItem","lastVal","lastX","newY","newX","state","hrReadings","length","maxReadings","xAxis","slice","concat","setState","options","elements","point","radius","plugins","legend","display","scales","x","y","suggestedMin","suggestedMax","data","labels","this","datasets","fill","backgroundColor","borderColor","borderWidth","tension","className","React","Component","TopBar","onClick","logout","to","HomePage","getTracks","url","favoritePlaylistId","fetch","method","headers","token","then","response","json","temp","items","i","push","tracks","componentDidMount","favoritePlaylistLink","tracksVar","displayAlbum","track","image","albumCover","fPlaylist","uri","id","defaultImage","avg","avgCalc","signout","src","alt","callback","uris","styles","bgColor","sliderColor","trackArtistColor","trackNameColor","color","scopes","hash","window","location","substring","split","reduce","initial","item","parts","decodeURIComponent","LoginPage","_token","access_token","updateToken","href","join","PlaylistPage","playlistMethod","currentlySelected","playlists","map","playlist","name","favoritePlaylist","cookies","Cookies","App","getPlaylists","setFavoritePlaylist","playlistURL","setToken","set","path","removeToken","remove","get","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cf9a3151.chunk.js","sourcesContent":["import React from \"react\";\nimport { Line } from \"react-chartjs-2\";\n\nexport default class GraphComponent extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      hrReadings: [90,90,90,130,130,130 ], // 90,90,90,130,130,130 List containing the heart rate readings to display in the graph (y axis)\n      xAxis: [0, 0.5, 1, 1.5, 2, 2.5], //0, 0.5, 1, 1.5, 2, 2.5\n      maxReadings: 10, // Maximum # of readings stored in the hrReadings (simulate motion of the graph)\n      options: {\n        elements: {\n          point: {\n            radius: 0,\n          },\n        },\n        plugins: {\n          legend: {\n            display: false,\n          },\n        },\n        scales: {\n          x: {\n            display: false,\n          },\n          y: {\n            display: false,\n            suggestedMin: 40,\n            suggestedMax: 200,\n          },\n        },\n      },\n    };\n  }\n\n  addItem = () => {\n    var lastVal = 0;\n    var lastX = 0;\n    var newY = 0;\n    var newX = 0;\n\n    if (this.state.hrReadings.length >= this.state.maxReadings) {\n      lastVal = this.state.hrReadings[9];\n      lastX = this.state.xAxis[9];\n      newY = this.state.hrReadings.slice(1).concat(lastVal + 20);\n      newX = this.state.xAxis.slice(1).concat(lastX + 0.5);\n    } else {\n      lastVal = this.state.hrReadings[this.state.hrReadings.length - 1];\n      lastX = this.state.xAxis[this.state.xAxis.length - 1];\n      newY = this.state.hrReadings.concat(lastVal + 20);\n      newX = this.state.xAxis.concat(lastX + 0.5);\n    }\n\n    this.setState({ xAxis: newX, hrReadings: newY });\n  };\n\n  render() {\n    const data = {\n      labels: this.state.xAxis,\n      datasets: [\n        {\n          data: this.state.hrReadings,\n          fill: false,\n          backgroundColor: \"rgb(255, 99, 132)\",\n          borderColor: \"rgba(255, 99, 132, 0.7)\",\n          borderWidth: 5,\n          tension: 0.2,\n        },\n      ],\n    };\n    //<button className=\"addButton\" onClick={this.addItem}>Add Point</button>\n    return (\n      <div className=\"graphContainer\">\n        <Line className=\"lineGraph\" options={this.state.options} data={data} />\n      </div>\n    );\n  }\n}\n","export default __webpack_public_path__ + \"static/media/testImage.26d51764.jpg\";","import React from \"react\";\nimport { Link } from \"react-router-dom\"\n\n// props:\n// logout: function to remove the spotify auth cookie\nexport default class TopBar extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {//<div className=\"settingsButton topBarButton\">Playlists</div>\n    return (\n      <div className=\"topBar\">\n        <div className=\"signInButton topBarButton\" onClick={this.props.logout}>Sign Out</div>\n        <div className=\"profileButton topBarButton\"></div>\n        <div className=\"bpmButton topBarButton\">Sport</div>\n        <div className=\"pageHeader\">\n          <span className=\"heart\">H3art</span>Beatz\n        </div>\n        <div className=\"invertedButton topBarButton\">BPMFlip</div>\n        <div className=\"therapyModeButton topBarButton\">Therapy</div>\n        <Link to=\"/playlist\" className=\"settingsButton topBarButton\">Playlists</Link>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport GraphComponent from \"./GraphComponent\";\nimport defaultImage from \"../Assets/testImage.jpg\";\nimport TopBar from \"./TopBar\";\nimport SpotifyPlayer from \"react-spotify-web-playback\";\n\n// props:\n// signout: function to remove spotify auth token cookie\n// token: spotify token\n// fPlaylist: favorite playlist\n\nvar socket;\nvar count = 0;\nexport default class HomePage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      favoritePlaylistLink:\n        this.props.fPlaylist != null\n          ? this.props.fPlaylist.uri\n          : \"spotify:artist:6HQYnRM4OzToCYPpVBInuU\",\n      favoritePlaylistId:\n        this.props.fPlaylist != null ? this.props.fPlaylist.id : null,\n      albumCover: defaultImage,\n      avg: [],\n      avgCalc: 0,\n      hrReadings: [100],\n      xAxis: [0],\n      tracks:[],\n    };\n  }\n\n  getTracks = () => {\n    var url = `https://api.spotify.com/v1/playlists/${this.state.favoritePlaylistId}/tracks`\n    fetch(url, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": \"Bearer \" + this.props.token,\n      }\n    }).then((response) => response.json())\n    .then(data => {\n      let temp = [];\n      for (let i of data.items) {\n        temp.push(i);\n      }\n      this.setState({tracks:temp});\n    })\n  }\n\n  componentDidMount = () => {\n    // socket = new WebSocket(\"ws://h3artbeatz.herokuapp.com/websocket\");\n\n    // socket.addEventListener(\"open\", (event) => {\n    //   console.log(\"Websocket Connected!\");\n    // });\n\n    // socket.addEventListener(\"message\", (event) => {\n    //   var data = \"\"\n    //   try {\n    //     console.log(event.data);\n    //     data = JSON.parse(event.data)[\"BPM\"];\n    //   } catch(e) {\n\n    //   }\n       \n    //   var newList =[];\n    //   if (this.state.avg.length < 15) {\n    //     newList = this.state.avg.concat([data]);\n    //     this.setState({avg:newList});\n    //   }\n    //   if (this.state.avg.length >= 15) {\n    //     var sum = 0;\n    //     for (var i = 0; i < 15; i++) {\n    //       sum += this.state.avg[i]\n    //     }\n    //     var avgVal = sum / 15\n    //     this.setState({avgCalc: avgVal});\n    //   }\n    //   if (count > 20) {\n    //     var newList = this.state.hrReadings.concat([data]);\n    //     var lastX = this.state.xAxis[this.state.xAxis.length - 1]\n    //     var newX = this.state.xAxis.concat(this.state.xAxis[lastX])\n    //     this.setState({hrReadings:newList});\n    //     this.setState({xAxis:lastX});\n    //     count = 0;\n    //   }\n\n    //   count++;\n    // });\n\n    // socket.addEventListener(\"close\", (event) => {\n    //   console.log(\"Websocket Disconnected!\");\n    // });\n\n    if (this.state.favoritePlaylistId != null && this.state.favoritePlaylistLink != null) {\n      let tracksVar = this.getTracks();\n      this.setState({tracks: tracksVar});\n    }\n  };\n\n  displayAlbum = (state) => {\n    if (state && state.track && state.track.image) {\n      this.setState({ albumCover: state.track.image });\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"mainContent\">\n        <TopBar logout={this.props.signout} />\n        <div className=\"albumContainer\">\n          <img\n            className=\"albumCover\"\n            src={this.state.albumCover}\n            alt={defaultImage}\n          ></img>\n        </div>\n        <GraphComponent />\n        <SpotifyPlayer\n          token={this.props.token}\n          callback={this.displayAlbum}\n          uris={[this.state.favoritePlaylistLink]}\n          styles={{\n            bgColor: \"#000\",\n            sliderColor: \"#ff6384\",\n            trackArtistColor: \"#fff\",\n            trackNameColor: \"#fff\",\n            color: \"#fff\",\n          }}\n        />\n      </div>\n    );\n  }\n}\n","import React from \"react\";\n\n\nexport const authEndpoint = 'https://accounts.spotify.com/authorize?';\n// Replace with your app's client ID, redirect URI and desired scopes\nconst clientId = \"0f76c14b4897491db4970cd235a10161\";\n//const redirectUri = \"http://localhost:3000\";\nconst redirectUri = \"https://h3artbeatz.herokuapp.com/\";\nconst scopes = [\n  \"user-read-playback-state\",\n  \"streaming\",\n  \"user-read-email\",\n  \"user-read-private\",\n  \"user-modify-playback-state\",\n  \"user-library-read\",\n  \"user-library-modify\",\n];\n\nconst hash = window.location.hash\n  .substring(1)\n  .split(\"&\")\n  .reduce(function(initial, item) {\n    if (item) {\n      var parts = item.split(\"=\");\n      initial[parts[0]] = decodeURIComponent(parts[1]);\n    }\n    return initial;\n  }, {});\nwindow.location.hash = \"\";\n\n\n// props:\n// updateToken: function to update the token in app.jsx\nexport default class LoginPage extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            token: \"\",\n        }\n    }\n\n    componentDidMount = () => {\n        let _token = hash.access_token;\n        if (_token) {\n            this.setState({token:_token});\n            this.props.updateToken(_token);\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"mainContainer\">\n                <div className=\"pageHeader\"><span className=\"heart\">H3art</span>Beatz</div>\n                <div className=\"loginContainer\">\n                    <div className=\"loginWindow\">\n                        <div className=\"loginHeader\">Login</div>\n                        {this.state.token === \"\" ? (\n                            <a className=\"loginButton\" href={`${authEndpoint}client_id=${clientId}&redirect_uri=${redirectUri}&scope=${scopes.join(\"%20\")}&response_type=token&show_dialog=true`}>Login With Spotify</a>\n                        ):(<div/>)}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport default class PlaylistPage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n        currentlySelected: null,\n    };\n  }\n\n  componentDidMount = () => {\n    this.props.playlistMethod();\n  };\n\n  render() {\n    return (\n      <div className=\"playlistPageContent\">\n        <div className=\"topBar\">\n          <div className=\"pageHeader\">\n            <span className=\"heart\">H3art</span>Beatz\n          </div>\n        </div>\n        <Link to=\"/\" className=\"backButton\">\n            Back\n          </Link>\n          <div className=\"playlistHeader\">Playlists:</div>\n        <div className=\"playlistsContainer\">\n        {this.props.playlists.map((playlist) => {\n          return (\n            <div className={this.state.currentlySelected === playlist.name ? \"playlistItem selected\" : \"playlistItem\"} key={playlist.name}>\n              <div className=\"pName\">{playlist.name}</div>\n              <div className=\"selectButton\" onClick={() => {\n                  this.props.favoritePlaylist(playlist);\n                  this.setState({currentlySelected:playlist.name});\n            }}>Favorite</div>\n            </div>\n          );\n        })}\n        </div>\n      </div>\n    );\n  }\n}\n","import \"./App.css\";\nimport React from \"react\";\nimport HomeComponent from \"./Components/HomePage\";\nimport LoginPage from \"./Components/LoginPage\";\nimport Cookies from \"universal-cookie\";\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\nimport PlaylistPage from \"./Components/PlaylistPage\";\n\nconst cookies = new Cookies()\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      token: cookies.get('spotifyToken'),\n      playlists: [],\n      favoritePlaylist:null\n    }\n  }\n\n  getPlaylists = () => {\n    fetch(\"https://api.spotify.com/v1/me/playlists\", {\n      method:\"GET\",\n      headers:{\n        \"Content-Type\": \"application/json\",\n        'Authorization': 'Bearer ' + this.state.token,\n    }}).then((response) => response.json())\n    .then((data) => {\n      this.setState({playlists: data.items});\n    })\n  }\n\n  setFavoritePlaylist = (playlistURL) => {\n    this.setState({favoritePlaylist : playlistURL});\n  }\n\n  setToken = (token) => {\n    cookies.set('spotifyToken', token, {path:'/'});\n    this.setState({token: token});\n  }\n\n  removeToken = () => {\n    cookies.remove('spotifyToken');\n    this.setState({'token': null});\n  }\n\n  render() {\n    return <div className=\"App\">\n      <Router>\n        <Routes>\n          <Route path=\"/playlist\" element={<PlaylistPage playlistMethod={this.getPlaylists} playlists={this.state.playlists} favoritePlaylist={this.setFavoritePlaylist}/>}/>\n          {this.state.token != null ? \n          <Route path=\"/\" element={<HomeComponent signout={this.removeToken} token={this.state.token} fPlaylist={this.state.favoritePlaylist}/>}/> :\n          <Route path=\"/\" element={<LoginPage updateToken={this.setToken}/>}/>}\n        </Routes>\n      </Router>\n\n    </div>;\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}